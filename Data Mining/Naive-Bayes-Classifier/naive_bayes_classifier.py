# -*- coding: utf-8 -*-
"""Naive_Bayes_Classifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XSM01czLLwEKN5mOi8hUDrRMUxygDu1H
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, confusion_matrix

# Load training data
df = pd.read_csv('Mushroom_Train.csv')

# Handle missing values in 'stalk-root'
df["stalk-root"].replace({"?": "b"}, inplace=True)

# Encoding all categorical columns
obj_df = df.select_dtypes(include=['object']).copy()
encoded_all = {}

# Encode categorical columns
for col in obj_df.columns:
    encoder = LabelEncoder()
    obj_df[col] = encoder.fit_transform(obj_df[col])
    encoded_all[col] = encoder

df_train = obj_df

# Define X_train and y_train
X_train = df_train.drop('class', axis=1)
y_train = df_train['class']

# Train Naive Bayes model
model = GaussianNB()
model.fit(X_train, y_train)

# Load test data
df_test = pd.read_csv('Mushroom_Test.csv')
df_test["stalk-root"].replace({"?": "b"}, inplace=True)

# Encode test data columns
obj_df_test = df_test.select_dtypes(include=['object']).copy()

for col in obj_df_test.columns:
    encoder = LabelEncoder()
    obj_df_test[col] = encoder.fit_transform(obj_df_test[col])
    # Assuming the same encoding as for training data (you may need to handle this better for unseen categories)

df_test = obj_df_test

# Define X_test and y_test
X_test = df_test.drop('class', axis=1)
y_test = df_test['class']

# Predict using the trained model
predicted = model.predict(X_test)

# Compute accuracy and confusion matrix
accuracy = accuracy_score(y_test, predicted)
conf_matrix = confusion_matrix(y_test, predicted)

print(f"Accuracy: {accuracy}")
print(f"Confusion Matrix:\n{conf_matrix}")